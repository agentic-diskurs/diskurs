first_contact: "conductor_agent"
toolExecutorType: "default"
dispatcherType: "synchronous"
# customModules:
agents:
  - name: "conductor_agent"
    type: "conductor"
    llm: "gpt-4-azure"
    maxTrials: 10
    prompt:
      type: "conductor_prompt"
      location: "agents/conductor_agent"
      userPromptArgumentClass: "ConductorUserPromptArgument"
      systemPromptArgumentClass: "ConductorSystemPromptArgument"
      longtermMemoryClass: "MyConductorLongtermMemory"
      canFinalizeName: "can_finalize"
      fail_name: "fail"
    topics:
      - "first_agent"
      - "second_agent"
    finalizerName: "finalizer_agent"
  - name: "first_agent"
    type: "multistep"
    llm: "gpt-4-azure"
    maxReasoningSteps: 25
    prompt:
      type: "multistep_prompt"
      location: "agents/first_agent"
      systemPromptArgumentClass: "FirstSystemPromptArgument"
      userPromptArgumentClass: "FirstUserPromptArgument"
      isValidName: "is_valid"
      isFinalName: "is_final"
    tools:
      - "example_tool1"
      - "example_tool2"
    topics:
      - "conductor_agent"
  - name: "second_agent"
    type: "multistep"
    llm: "gpt-4-azure"
    prompt:
      type: "multistep_prompt"
      location: "agents/second_agent"
      systemPromptArgumentClass: "SecondSystemPromptArgument"
      userPromptArgumentClass: "SecondUserPromptArgument"
      isValidName: "is_valid"
      isFinalName: "is_final"
    tools:
      - "example_tool1"
      - "example_tool2"
    topics:
        - "conductor_agent"

llms:
#  - name: "gpt-4-o-openai"
#    type: "openai"
#    modelName: "gpt-4o"
#    modelMaxTokens: 8192
#    apiKey: "${OPENAI_API_KEY}"
  - name: "gpt-4-azure"
    type: "azure"
    api_version: "2024-08-01-preview"
    model_name: "gpt-4-0613"
    endpoint: "https://<workspace>.openai.azure.com"
    use_entra_id: True
    modelMaxTokens: 8192

tools:
  - name: "example_tool1"
    functionName: "my_func1"
    modulePath: "my_tools/example_tools.py"
  - name: "example_tool2"
    functionName: "my_func2"
    modulePath: "my_tools/example_tools.py"
    configs:
      foo: "bar"
      baz: "qux"
toolDependencies:
  someExternalDependency:
    userName: "Jane"
    street: "Maint st."